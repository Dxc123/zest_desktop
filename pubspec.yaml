name: zest_desktop
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # Flutter Intl插件国际化
  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  get: ^4.6.6
  dio: ^5.7.0
  json_annotation: ^4.9.0
  freezed_annotation: ^2.4.4
  logger: ^2.5.0
  ansi_styles: ^0.3.2+1 #控制台输出颜色

  flutter_staggered_grid_view: ^0.7.0
  flutter_easyloading: ^3.0.5
  flutter_screenutil: ^5.9.3
  easy_refresh: ^3.4.0

  get_storage: ^2.1.1
  shared_preferences: ^2.3.5
  event_bus: ^2.0.1
  permission_handler: ^11.3.1



dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^4.0.0
  build_runner: ^2.4.13
  json_serializable: ^6.8.0
  freezed: ^2.5.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter packages.
flutter:
  fonts:
    - family: IconUntil
      fonts:
        - asset: assets/icon_font/icon_until.ttf

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  assets:
    - assets/
    - assets/images/
    - assets/locales/
    - assets/models/

# flutter_intl插件/intl_utils cli工具 配置:
flutter_intl:
  enabled: false #是否激活
  class_name: S #设置生成的本地化类的名称。默认值：S
  main_locale: en #设置用于生成本地化文件的主要语言环境, 默认值：en
  arb_dir: lib/generated/l10n #设置 ARB 资源文件的目录,默认值：lib/l10n
  output_dir: lib/generated #设置生成的本地化文件的目录,默认值：lib/generated

# Flutter Assets Gen插件(vscode) 配置
flutter_assets:
  assets_path: assets/
  output_path: lib/generated/
  filename: assets.dart
  ignore_comments: true
  field_prefix:
  class_name: Assets


#  本地的get_cli工具：字体图标配置 命令 get_cli generate icons
flutter_icons:
  src_zip: 'assets/download.zip' # 下载的字体图标压缩包资源路径
  assets_dir: 'assets/icon_font/'  # ttf文件解压的文件夹
  dist_file: 'lib/app/data/utils/icon_until.dart' # 生成的代码文件路径