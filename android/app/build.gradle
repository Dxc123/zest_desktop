plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
// 添加properties 文件的密钥库信息
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    namespace = "com.rabbit.zest_desktop"
    compileSdkVersion 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.rabbit.zest_desktop"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }
    signingConfigs {
////    Codemagic 打包
//        release {
//            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
//                storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
//                storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
//                keyAlias System.getenv()["CM_KEY_ALIAS"]
//                keyPassword System.getenv()["CM_KEY_PASSWORD"]
//            } else {
//                keyAlias keystoreProperties['keyAlias']
//                keyPassword keystoreProperties['keyPassword']
//                storeFile file(keystoreProperties['storeFile']) ? file(keystoreProperties['storeFile']) : null // 发包使用
//                storePassword keystoreProperties['storePassword']
//            }
//        }
//Github Action Flutter项目打包
        release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile']) ? file(keystoreProperties['storeFile']) : null // 发包使用
                storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true   //开启混淆
            shrinkResources true  //移出无用资源
            zipAlignEnabled true  //压缩优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' //默认的混淆文件以及我们指定的混淆文件
            signingConfig signingConfigs.release
            ndk {
////            测试打包架构，缩小包大小
//                abiFilters 'arm64-v8a'
                abiFilters "armeabi-v7a",'arm64-v8a'
            }

        }
        debug {
            minifyEnabled true   //开启混淆
            shrinkResources true  //移出无用资源
            zipAlignEnabled true  //压缩优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' //默认的混淆文件以及我们指定的混淆文件
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
